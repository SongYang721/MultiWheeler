@page "/reports/create"
@using Microsoft.EntityFrameworkCore
@using MultiWheeler.Domain
@inject IDbContextFactory<MultiWheeler.Data.MultiWheelerContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Report</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Report" OnValidSubmit="AddReport" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="issuecategory" class="form-label">IssueCategory:</label> 
                <InputText id="issuecategory" @bind-Value="Report.IssueCategory" class="form-control" /> 
                <ValidationMessage For="() => Report.IssueCategory" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="issuedescription" class="form-label">IssueDescription:</label> 
                <InputText id="issuedescription" @bind-Value="Report.IssueDescription" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Report.IssueDescription" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="customerid" class="form-label">CustomerId:</label> 
                <InputNumber id="customerid" @bind-Value="Report.CustomerId" class="form-control" /> 
                <ValidationMessage For="() => Report.CustomerId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/reports">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Report Report { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddReport()
    {
        using var context = DbFactory.CreateDbContext();
        context.Report.Add(Report);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/reports");
    }
}
